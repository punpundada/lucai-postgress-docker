# docker compose -f docker-compose.prod.yml up

# docker-compose up \
# --build \
# --env ARG_NAME=value \
# --env-file .env
version: '3.8'

services:
  backend:
    env_file:
      - .env
    environment:
      - DB_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    container_name: auth_backend
    build: 
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        - name=value
    command: bun run dev #over-riding the default RUN bun run build command from docker file
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./src
          target: /usr/src/app/src
        - action: rebuild
          path: package.json

  db:
    image: postgres:16.3-alpine3.18
    container_name: My_DB
    restart: unless-stopped
    volumes:
      # - .:/dev/shm
      - db-data:/var/lib/postgresql/data
    env_file:
      - path: .env
        required: true
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_period: 30s
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
          
volumes:
  db-data: